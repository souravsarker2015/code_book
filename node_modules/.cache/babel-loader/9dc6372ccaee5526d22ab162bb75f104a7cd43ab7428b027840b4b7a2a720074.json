{"ast":null,"code":"var _jsxFileName = \"/home/sourov/MyProjectsGit/react_all_projects/code_book/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { CartReducer } from \"../reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartInitialState = {\n  cartList: [],\n  total: 0\n};\nconst CartContext = /*#__PURE__*/createContext(cartInitialState);\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(CartReducer, cartInitialState);\n  function addToCart(product) {\n    const updatedList = state.cartList.concat(product);\n    const updatedTotal = state.total + product.price;\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: {\n        products: updatedList,\n        total: updatedTotal\n      }\n    });\n  }\n  function removeFromCart(product) {\n    const updatedList = state.cartList.filter(item => item.id !== product.id);\n    const updatedTotal = state.total - product.price;\n    dispatch({\n      type: \"REMOVE_FROM_CART\",\n      payload: {\n        products: updatedList,\n        total: updatedTotal\n      }\n    });\n  }\n  function clearCart() {\n    dispatch({\n      type: \"CLEAR_CART\",\n      payload: {\n        products: [],\n        total: 0\n      }\n    });\n  }\n  const value = {\n    cartList: state.cartList,\n    total: state.total,\n    addToCart,\n    removeFromCart,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"2G2czmTwfytjqisjfXuXF1d2dug=\");\n_c = CartProvider;\nexport const UseCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  return context;\n};\n_s2(UseCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c2 = UseCart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CartProvider\");\n$RefreshReg$(_c2, \"UseCart\");","map":{"version":3,"names":["createContext","useContext","useReducer","CartReducer","jsxDEV","_jsxDEV","cartInitialState","cartList","total","CartContext","CartProvider","_ref","_s","children","state","dispatch","addToCart","product","updatedList","concat","updatedTotal","price","type","payload","products","removeFromCart","filter","item","id","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","UseCart","_s2","context","_c2","$RefreshReg$"],"sources":["/home/sourov/MyProjectsGit/react_all_projects/code_book/src/context/CartContext.js"],"sourcesContent":["import {createContext, useContext, useReducer} from \"react\";\nimport {CartReducer} from \"../reducer\";\n\nconst cartInitialState = {\n    cartList: [],\n    total: 0\n}\n\nconst CartContext = createContext(cartInitialState)\n\nexport const CartProvider = ({children}) => {\n    const [state, dispatch] = useReducer(CartReducer, cartInitialState)\n\n    function addToCart(product) {\n        const updatedList = state.cartList.concat(product);\n        const updatedTotal = state.total + product.price;\n\n        dispatch({\n            type: \"ADD_TO_CART\",\n            payload: {\n                products: updatedList,\n                total: updatedTotal\n            }\n        })\n    }\n\n    function removeFromCart(product) {\n        const updatedList = state.cartList.filter(item => item.id !== product.id)\n        const updatedTotal = state.total - product.price;\n        dispatch({\n            type: \"REMOVE_FROM_CART\",\n            payload: {\n                products: updatedList,\n                total: updatedTotal\n            }\n        })\n    }\n\n\n    function clearCart() {\n        dispatch({\n            type: \"CLEAR_CART\",\n            payload: {\n                products: [],\n                total: 0\n            }\n        })\n    }\n\n    const value = {\n        cartList: state.cartList,\n        total: state.total,\n        addToCart,\n        removeFromCart,\n        clearCart\n    }\n    return (\n        <CartContext.Provider value={value}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n\nexport const UseCart = () => {\n    const context = useContext(CartContext)\n    return context\n}"],"mappings":";;;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAO,OAAO;AAC3D,SAAQC,WAAW,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,GAAG;EACrBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,gBAAGT,aAAa,CAACM,gBAAgB,CAAC;AAEnD,OAAO,MAAMI,YAAY,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACC,WAAW,EAAEG,gBAAgB,CAAC;EAEnE,SAASU,SAASA,CAACC,OAAO,EAAE;IACxB,MAAMC,WAAW,GAAGJ,KAAK,CAACP,QAAQ,CAACY,MAAM,CAACF,OAAO,CAAC;IAClD,MAAMG,YAAY,GAAGN,KAAK,CAACN,KAAK,GAAGS,OAAO,CAACI,KAAK;IAEhDN,QAAQ,CAAC;MACLO,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;QACLC,QAAQ,EAAEN,WAAW;QACrBV,KAAK,EAAEY;MACX;IACJ,CAAC,CAAC;EACN;EAEA,SAASK,cAAcA,CAACR,OAAO,EAAE;IAC7B,MAAMC,WAAW,GAAGJ,KAAK,CAACP,QAAQ,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,OAAO,CAACW,EAAE,CAAC;IACzE,MAAMR,YAAY,GAAGN,KAAK,CAACN,KAAK,GAAGS,OAAO,CAACI,KAAK;IAChDN,QAAQ,CAAC;MACLO,IAAI,EAAE,kBAAkB;MACxBC,OAAO,EAAE;QACLC,QAAQ,EAAEN,WAAW;QACrBV,KAAK,EAAEY;MACX;IACJ,CAAC,CAAC;EACN;EAGA,SAASS,SAASA,CAAA,EAAG;IACjBd,QAAQ,CAAC;MACLO,IAAI,EAAE,YAAY;MAClBC,OAAO,EAAE;QACLC,QAAQ,EAAE,EAAE;QACZhB,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;EAEA,MAAMsB,KAAK,GAAG;IACVvB,QAAQ,EAAEO,KAAK,CAACP,QAAQ;IACxBC,KAAK,EAAEM,KAAK,CAACN,KAAK;IAClBQ,SAAS;IACTS,cAAc;IACdI;EACJ,CAAC;EACD,oBACIxB,OAAA,CAACI,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAC9BA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE/B,CAAC;AAAAvB,EAAA,CAnDYF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAqDzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGtC,UAAU,CAACQ,WAAW,CAAC;EACvC,OAAO8B,OAAO;AAClB,CAAC;AAAAD,GAAA,CAHYD,OAAO;AAAAG,GAAA,GAAPH,OAAO;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}